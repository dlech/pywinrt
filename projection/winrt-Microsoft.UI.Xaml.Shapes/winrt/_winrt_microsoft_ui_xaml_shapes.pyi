# WARNING: Please don't edit this file. It was generated by Python/WinRT v0.0.0

import datetime
import sys
import types
import typing
import uuid as _uuid
from builtins import property as _property

import winrt._winrt
import winrt.system
import winrt.microsoft.ui.composition as microsoft_ui_composition
import winrt.microsoft.ui.input as microsoft_ui_input
import winrt.microsoft.ui.xaml as microsoft_ui_xaml
import winrt.microsoft.ui.xaml.data as microsoft_ui_xaml_data
import winrt.microsoft.ui.xaml.input as microsoft_ui_xaml_input
import winrt.microsoft.ui.xaml.media as microsoft_ui_xaml_media
import winrt.windows.applicationmodel.datatransfer as windows_applicationmodel_datatransfer
import winrt.windows.foundation as windows_foundation

Self = typing.TypeVar('Self')

@typing.final
class Ellipse(winrt.system.Object):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Ellipse: ...
    def __new__(cls: typing.Type[Ellipse]) -> Ellipse: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...

@typing.final
class Line_Static(type):
    @_property
    def x1_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def x2_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def y1_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def y2_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Line(winrt.system.Object, metaclass=Line_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Line: ...
    def __new__(cls: typing.Type[Line]) -> Line: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def y2(self) -> winrt.system.Double: ...
    @y2.setter
    def y2(self, value: winrt.system.Double) -> None: ...
    @_property
    def y1(self) -> winrt.system.Double: ...
    @y1.setter
    def y1(self, value: winrt.system.Double) -> None: ...
    @_property
    def x2(self) -> winrt.system.Double: ...
    @x2.setter
    def x2(self, value: winrt.system.Double) -> None: ...
    @_property
    def x1(self) -> winrt.system.Double: ...
    @x1.setter
    def x1(self, value: winrt.system.Double) -> None: ...

@typing.final
class Path_Static(type):
    @_property
    def data_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Path(winrt.system.Object, metaclass=Path_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Path: ...
    def __new__(cls: typing.Type[Path]) -> Path: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def data(self) -> typing.Optional[microsoft_ui_xaml_media.Geometry]: ...
    @data.setter
    def data(self, value: typing.Optional[microsoft_ui_xaml_media.Geometry]) -> None: ...

@typing.final
class Polygon_Static(type):
    @_property
    def fill_rule_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def points_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Polygon(winrt.system.Object, metaclass=Polygon_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Polygon: ...
    def __new__(cls: typing.Type[Polygon]) -> Polygon: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def points(self) -> typing.Optional[microsoft_ui_xaml_media.PointCollection]: ...
    @points.setter
    def points(self, value: typing.Optional[microsoft_ui_xaml_media.PointCollection]) -> None: ...
    @_property
    def fill_rule(self) -> microsoft_ui_xaml_media.FillRule: ...
    @fill_rule.setter
    def fill_rule(self, value: microsoft_ui_xaml_media.FillRule) -> None: ...

@typing.final
class Polyline_Static(type):
    @_property
    def fill_rule_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def points_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Polyline(winrt.system.Object, metaclass=Polyline_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Polyline: ...
    def __new__(cls: typing.Type[Polyline]) -> Polyline: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def points(self) -> typing.Optional[microsoft_ui_xaml_media.PointCollection]: ...
    @points.setter
    def points(self, value: typing.Optional[microsoft_ui_xaml_media.PointCollection]) -> None: ...
    @_property
    def fill_rule(self) -> microsoft_ui_xaml_media.FillRule: ...
    @fill_rule.setter
    def fill_rule(self, value: microsoft_ui_xaml_media.FillRule) -> None: ...

@typing.final
class Rectangle_Static(type):
    @_property
    def radius_x_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def radius_y_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Rectangle(winrt.system.Object, metaclass=Rectangle_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Rectangle: ...
    def __new__(cls: typing.Type[Rectangle]) -> Rectangle: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def radius_y(self) -> winrt.system.Double: ...
    @radius_y.setter
    def radius_y(self, value: winrt.system.Double) -> None: ...
    @_property
    def radius_x(self) -> winrt.system.Double: ...
    @radius_x.setter
    def radius_x(self, value: winrt.system.Double) -> None: ...

@typing.final
class Shape_Static(type):
    @_property
    def fill_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stretch_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_dash_array_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_dash_cap_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_dash_offset_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_end_line_cap_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_line_join_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_miter_limit_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_start_line_cap_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...
    @_property
    def stroke_thickness_property(cls) -> typing.Optional[microsoft_ui_xaml.DependencyProperty]: ...

@typing.final
class Shape(winrt.system.Object, metaclass=Shape_Static):
    @staticmethod
    def _from(obj: winrt.system.Object, /) -> Shape: ...
    def add_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], handled_events_too: bool, /) -> None: ...
    def arrange(self, final_rect: windows_foundation.Rect, /) -> None: ...
    def cancel_direct_manipulations(self) -> bool: ...
    def capture_pointer(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> bool: ...
    def clear_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> None: ...
    def find_name(self, name: str, /) -> typing.Optional[winrt.system.Object]: ...
    def focus(self, value: microsoft_ui_xaml.FocusState, /) -> bool: ...
    def get_alpha_mask(self) -> typing.Optional[microsoft_ui_composition.CompositionBrush]: ...
    def get_animation_base_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_binding_expression(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[microsoft_ui_xaml_data.BindingExpression]: ...
    def get_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def get_visual_internal(self) -> typing.Optional[microsoft_ui_composition.Visual]: ...
    def invalidate_arrange(self) -> None: ...
    def invalidate_measure(self) -> None: ...
    def measure(self, available_size: windows_foundation.Size, /) -> None: ...
    def populate_property_info(self, property_name: str, property_info: typing.Optional[microsoft_ui_composition.AnimationPropertyInfo], /) -> None: ...
    def read_local_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], /) -> typing.Optional[winrt.system.Object]: ...
    def register_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], callback: typing.Optional[microsoft_ui_xaml.DependencyPropertyChangedCallback], /) -> winrt.system.Int64: ...
    def release_pointer_capture(self, value: typing.Optional[microsoft_ui_xaml_input.Pointer], /) -> None: ...
    def release_pointer_captures(self) -> None: ...
    def remove_handler(self, routed_event: typing.Optional[microsoft_ui_xaml.RoutedEvent], handler: typing.Optional[winrt.system.Object], /) -> None: ...
    def set_binding(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], binding: typing.Optional[microsoft_ui_xaml_data.BindingBase], /) -> None: ...
    def set_value(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], value: typing.Optional[winrt.system.Object], /) -> None: ...
    def start_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    @typing.overload
    def start_bring_into_view(self) -> None: ...
    @typing.overload
    def start_bring_into_view(self, options: typing.Optional[microsoft_ui_xaml.BringIntoViewOptions], /) -> None: ...
    def start_drag_async(self, pointer_point: typing.Optional[microsoft_ui_input.PointerPoint], /) -> windows_foundation.IAsyncOperation[windows_applicationmodel_datatransfer.DataPackageOperation]: ...
    def stop_animation(self, animation: typing.Optional[microsoft_ui_composition.ICompositionAnimationBase], /) -> None: ...
    def transform_to_visual(self, visual: typing.Optional[microsoft_ui_xaml.UIElement], /) -> typing.Optional[microsoft_ui_xaml_media.GeneralTransform]: ...
    def try_invoke_keyboard_accelerator(self, args: typing.Optional[microsoft_ui_xaml_input.ProcessKeyboardAcceleratorEventArgs], /) -> None: ...
    def unregister_property_changed_callback(self, dp: typing.Optional[microsoft_ui_xaml.DependencyProperty], token: winrt.system.Int64, /) -> None: ...
    def update_layout(self) -> None: ...
    @_property
    def stroke_thickness(self) -> winrt.system.Double: ...
    @stroke_thickness.setter
    def stroke_thickness(self, value: winrt.system.Double) -> None: ...
    @_property
    def stroke_start_line_cap(self) -> microsoft_ui_xaml_media.PenLineCap: ...
    @stroke_start_line_cap.setter
    def stroke_start_line_cap(self, value: microsoft_ui_xaml_media.PenLineCap) -> None: ...
    @_property
    def stroke_miter_limit(self) -> winrt.system.Double: ...
    @stroke_miter_limit.setter
    def stroke_miter_limit(self, value: winrt.system.Double) -> None: ...
    @_property
    def stroke_line_join(self) -> microsoft_ui_xaml_media.PenLineJoin: ...
    @stroke_line_join.setter
    def stroke_line_join(self, value: microsoft_ui_xaml_media.PenLineJoin) -> None: ...
    @_property
    def stroke_end_line_cap(self) -> microsoft_ui_xaml_media.PenLineCap: ...
    @stroke_end_line_cap.setter
    def stroke_end_line_cap(self, value: microsoft_ui_xaml_media.PenLineCap) -> None: ...
    @_property
    def stroke_dash_offset(self) -> winrt.system.Double: ...
    @stroke_dash_offset.setter
    def stroke_dash_offset(self, value: winrt.system.Double) -> None: ...
    @_property
    def stroke_dash_cap(self) -> microsoft_ui_xaml_media.PenLineCap: ...
    @stroke_dash_cap.setter
    def stroke_dash_cap(self, value: microsoft_ui_xaml_media.PenLineCap) -> None: ...
    @_property
    def stroke_dash_array(self) -> typing.Optional[microsoft_ui_xaml_media.DoubleCollection]: ...
    @stroke_dash_array.setter
    def stroke_dash_array(self, value: typing.Optional[microsoft_ui_xaml_media.DoubleCollection]) -> None: ...
    @_property
    def stroke(self) -> typing.Optional[microsoft_ui_xaml_media.Brush]: ...
    @stroke.setter
    def stroke(self, value: typing.Optional[microsoft_ui_xaml_media.Brush]) -> None: ...
    @_property
    def stretch(self) -> microsoft_ui_xaml_media.Stretch: ...
    @stretch.setter
    def stretch(self, value: microsoft_ui_xaml_media.Stretch) -> None: ...
    @_property
    def fill(self) -> typing.Optional[microsoft_ui_xaml_media.Brush]: ...
    @fill.setter
    def fill(self, value: typing.Optional[microsoft_ui_xaml_media.Brush]) -> None: ...
    @_property
    def geometry_transform(self) -> typing.Optional[microsoft_ui_xaml_media.Transform]: ...

